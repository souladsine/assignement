version: "3.8"
services:
  api:
    container_name: api_srv_1
    restart: unless-stopped
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    ports:
      - "8090"
    networks:
      - traefik-net
      - internal
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.service=api
      - traefik.http.routers.api.rule=Host("api.localhost")
      - traefik.http.services.api.loadbalancer.server.port=8090
      - "traefik.http.routers.api.entrypoints=https"
      - "traefik.http.middlewares.authentication.basicauth.users=test:$$2a$$12$$08ym7Cfp3Cu4QACKdF6hmOJCpS6KTDkrTDAUhgnqyDJ2bwW9KoCSW"
      - "traefik.http.middlewares.compressor.compress=true"
      - "traefik.http.middlewares.ratelimiter.ratelimit.average=100"
      - "traefik.http.middlewares.ratelimiter.ratelimit.burst=50"
      - "traefik.http.routers.api.middlewares=ratelimiter,authentication,compressor"
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik_srv"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./services/router/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./services/router/config.yml:/etc/traefik/config.yml:ro
      - ./services/router/certs:/etc/certs:ro
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik-net
    healthcheck:
      test: [ "CMD", "traefik", "healthcheck", "--ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      api:
        condition: service_healthy

networks:
  traefik-net:
    external: true
  internal:
    driver: bridge